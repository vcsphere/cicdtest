name: Build Testapp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# checkout sample actions pipeline with 2 or more environments (dev, test, prod)
# paraemeterise the pipeline to use the same pipeline for all environments


jobs:
  build-testapp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        # with:
           #version: '270.0.0'
           #- skip_install: "true"
           #service_account_key: ${{ secrets.GCP_SA_KEY }}
           #project_id: ${{ secrets.GCP_PROJECT_ID }}
      #- run: gcloud auth configure-docker
      # lint ts code 
      - run: docker build -t test-project-nest -f test-project/Dockerfile .
      # scan image for vulnerabilities 
      
      #- run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/testapp:test
     # - run: gcloud container clusters get-credentials test-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}
     # - run: kubectl set image deployment/testapp testapp=gcr.io/${{ secrets.GCP_PROJECT_ID }}/testapp:test
  
    
  deploy-testapp-appengine:

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@v3'

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
      # service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      credentials_json: '${{ secrets.GCP_APPENGINE_SA  }}'

    - id: 'deploy'
      uses: 'google-github-actions/deploy-appengine@v1'

    # Example of using the output
    - id: 'test'
      run: 'curl "${{ steps.deploy.outputs.url }}"'
